import { useState } from "react";
import { NavLink } from "react-router-dom";

//___ Icons __//
import { GoSearch } from "react-icons/go";

//___ Css __//
import "./Header.css";

const Header = (props) => {
  const { toggle, setToggle } = props;
  const [searchDropDownVal, setSearchDropDownVal] = useState(false);

  const handleNavToggle = () => {
    setToggle((prev) => !prev);
  };
  const closeToggle = () => {
    setToggle((prev) => (prev = false));
  };
  const closePopUp = () => {
    setSearchDropDownVal(false);
  };

  document.onkeydown = function (evt) {
    evt = evt || window.event;
    var isEscape = false;
    if ("key" in evt) {
      isEscape = evt.key === "Escape" || evt.key === "Esc";
    } else {
      isEscape = evt.keyCode === 27;
    }
    if (isEscape) {
      closeToggle();
      closePopUp();
    }
  };

  return (
    <div className="Header">
      <div className="headerContainer d-flex">
        <div className="logo">
          {/* <img src={Logo} alt="" /> */}
          <p>
            Molla <span>Properties</span>
          </p>
        </div>
        <ul className={`d-flex ${toggle == true ? "active" : ""}`}>
          <li onClick={closeToggle}>
            <NavLink
              to="/"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              Home
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/ongoing-project"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              Ongoing Project
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/upcoming-project"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              Upcoming Project
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/completed-project"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              Completed Project
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/gallery"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              Gallery
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/honorable-client"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              Honorable client
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/news-event"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              News and Event
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/about-us"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              About us
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/blog"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              Blog
            </NavLink>
          </li>
          <li onClick={closeToggle}>
            <NavLink
              to="/contact-us"
              className={({ isActive }) => (isActive ? "isActive" : "")}
            >
              Contact us
            </NavLink>
          </li>
          <li onClick={closeToggle} className="search d-flex">
            <GoSearch
              size={25}
              className="c_pointer"
              onClick={() => {
                setSearchDropDownVal((prev) => !prev);
              }}
            />
            <div
              id="overlay"
              className={searchDropDownVal == true ? "overlay" : ""}
              onClick={closePopUp}
            ></div>
            <div
              className={`searchDropDown ${
                searchDropDownVal == true ? "active" : ""
              }`}
            >
              <div className="inputBox">
                <label>Search</label>
                <input type="text" placeholder="Search hear" />
              </div>
              <div className="resultBox d-flex">
                <h3>Search result</h3>
                <NavLink className="result">Rajshahi</NavLink>
                <NavLink className="result">Dhaka</NavLink>
                <NavLink className="result">Chittagong</NavLink>
                <NavLink className="result">Comilla</NavLink>
                <NavLink className="result">Khulna</NavLink>
                <NavLink className="result">Barisal</NavLink>
              </div>
            </div>
          </li>
        </ul>
        <div
          className={`toggler c_pointer ${
            searchDropDownVal == true ? "z-index-1" : ""
          }`}
          onClick={handleNavToggle}
        >
          <div></div>
        </div>
      </div>
    </div>
  );
};

export default Header;

.Header {
  background: var(--light-1);
  box-shadow: var(--shadow);
  padding: 14px 30px;
  width: 100%;
  height: 53px;
  position: fixed;
  top: 0;
  z-index: 999;
}
.Header .headerContainer {
  background: var(--light-1);
  justify-content: space-between;
  max-width: 2000px;
  margin: 0 auto;
}
.Header .logo {
  /* width: 270px; */
  height: auto;
}
.Header .logo p {
  font-size: 1.3rem;
  text-transform: uppercase;
  font-weight: 600;
  cursor: default;

  /* background: linear-gradient(to right, var(--blue), var(--main-color));
  background-clip: text;
  color: transparent; */
}
.Header .logo p span {
  color: var(--main-color);
}
.Header ul {
  justify-content: space-between;
  gap: 30px;
}
.Header ul a {
  transition: var(--trans);
  text-transform: capitalize;
  font-size: 0.95rem;
  font-weight: 400;
}
.Header ul a:hover {
  color: var(--main-color);
}
.Header ul .search {
  justify-content: center;
}
.Header .toggler {
  background: transparent;
  width: 30px;
  height: 25px;
  display: none;
  opacity: 1;
  transition: var(--trans);
  z-index: 998;
}
.Header .toggler.z-index-1 {
  z-index: -1;
  opacity: 0;
}
.Header .toggler div {
  width: 100%;
  height: 3px;
  background: var(--dark-1);
  border-radius: 10px;
  position: relative;
}
.Header .toggler div::after,
.Header .toggler div::before {
  content: "";
  width: 100%;
  height: 3px;
  background: var(--dark-1);
  border-radius: 10px;
  position: absolute;
}
.Header .toggler div::after {
  top: 9px;
}
.Header .toggler div::before {
  bottom: 9px;
}

/*___ Search Dropdown ___*/
.Header .search #overlay.overlay {
  position: fixed;
  opacity: 1;
}
.Header .headerContainer .searchDropDown {
  width: 80%;
  max-height: 300px;
  overflow-y: scroll;
  background: var(--light-1);
  box-shadow: var(--shadow);
  color: var(--dark-2);
  padding: 20px 30px;
  border-radius: 8px;
  position: absolute;
  top: -400px;
  left: 50%;
  transform: translate(-50%, 0%);
  transition: var(--trans);
  z-index: 1000;
}
.Header .headerContainer .searchDropDown::-webkit-scrollbar {
  display: none;
}
.Header .headerContainer .searchDropDown .inputBox label {
  font-size: 1.4rem;
}
.Header .headerContainer .searchDropDown .inputBox input {
  width: 100%;
  margin: 10px 0 20px 0;
  background: transparent;
  border: 0.16rem solid var(--light-2);
  outline: none;
  border-radius: 5px;
  font-size: 1rem;
  padding: 8px 20px;
}
.Header .headerContainer .searchDropDown.active {
  top: 20%;
}
.Header .headerContainer .searchDropDown .resultBox {
  font-weight: 400;
  flex-direction: column;
}
.Header .headerContainer .searchDropDown .resultBox h3 {
  width: 100%;
  margin-bottom: 10px;
  font-weight: 400;
  text-align: left;
}
.Header .headerContainer .searchDropDown .resultBox .result {
  font-size: 0.9rem;
  width: 100%;
  text-align: center;
  padding: 10px 0;
}
.Header .headerContainer .searchDropDown .resultBox .result:hover {
  background: var(--light-2);
}

/*___ Responsive ___*/
/* @media screen and (max-width: 1250px) {
  .Header .logo p {
    font-size: 1.2rem;
  }
} */
@media screen and (max-width: 1540px) {
  .Header ul {
    flex-direction: column;
    gap: 20px;
    padding: 50px 0 30px 0;
    position: absolute;
    background: var(--light-1);
    box-shadow: 5px 5px 20px var(--light-3);
    /* top: 0; */
    /* right: -200px; */
    /* height: 100vh; */
    /* width: 150px; */
    top: -600px;
    left: 0;
    width: 100%;
    /* height: 100px; */
    transition: var(--trans);
    /* overflow-y: scroll; */
    /* overflow-x: hidden; */
    z-index: 997;
  }
  .Header ul.active {
    /* right: 0; */
    top: 0;
  }
  .Header ul .search {
    background-color: var(--main-color);
    padding: 8px 50px;
    border-radius: 12px;
    color: var(--light-1);
  }
  .Header .toggler {
    width: 30px;
    height: 25px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .Header .headerContainer .searchDropDown {
    padding: 10px 20px;
    z-index: 1000;
  }
  .Header .headerContainer .searchDropDown.active {
    top: 610px;
  }
}
@media screen and (max-width: 340px) {
  .Header .logo p {
    font-size: 0.98rem;
  }
}
